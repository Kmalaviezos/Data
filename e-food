PART 1
-- Q1
SELECT city,Count(order_id) AS breakfast_count

FROM `bi-2019-test.ad_hoc.orders_jan2021`

WHERE cuisine_parent='Breakfast'

GROUP BY city

ORDER BY breakfast_count desc limit 10


--Q2
SELECT city, Count(distinct user_id) as unique_users , count(order_id) as orderscount

FROM `bi-2019-test.ad_hoc.orders_jan2021`

WHERE cuisine_parent='Breakfast'

GROUP BY city

ORDER BY orderscount desc limit 10


--Q3
SELECT city, (sum(basket)/count(order_id)) as avgbasket , count(order_id) as orderscount

FROM `bi-2019-test.ad_hoc.orders_jan2021`

WHERE user_id IN (Select user_id from `bi-2019-test.ad_hoc.orders_jan2021` where
cuisine_parent = 'Breakfast') 

GROUP BY  city
ORDER BY orderscount desc limit  10 


PART 2
A. 
SELECT basket , NUM_OF_USERS 

FROM (

SELECT 1 as basket ,count(distinct user_id) as  NUM_OF_USERS  from `bi-2019-test.ad_hoc.orders_jan2021` where basket between 0 and 5
 union all
SELECT 5 ,count(*) from `bi-2019-test.ad_hoc.orders_jan2021` where basket between 5 and 10
 union all
SELECT 20 ,count(*) from `bi-2019-test.ad_hoc.orders_jan2021` where basket between 10 and 15
 union all
SELECT 30 ,count(*) from `bi-2019-test.ad_hoc.orders_jan2021` where basket > 15 
 
)t

order by NUM_OF_USERS desc


B. 
SELECT count(DISTINCT user_id) AS userCount, COUNT(order_id) AS NumberOfOrders
    ,CASE 
        WHEN COUNT(order_id) BETWEEN 0 AND 5 THEN '1'
        END AS segment
FROM `bi-2019-test.ad_hoc.orders_jan2021`
GROUP BY  BASKET
HAVING COUNT(order_id) BETWEEN 0 AND 5
UNION ALL
SELECT count(DISTINCT user_id) AS userCount, COUNT(order_id) AS NumberOfOrders
    ,CASE 
        WHEN COUNT(order_id) BETWEEN 5 AND 10 THEN '2'
        END AS segment
FROM `bi-2019-test.ad_hoc.orders_jan2021`
GROUP BY  BASKET
HAVING COUNT(order_id) BETWEEN 5 AND 10
UNION ALL
SELECT count(DISTINCT user_id) AS userCount, COUNT(order_id) AS NumberOfOrders
    ,CASE 
      WHEN COUNT(order_id) > 10 THEN '3' 
      END AS segment
FROM `bi-2019-test.ad_hoc.orders_jan2021`
GROUP BY  BASKET
HAVING COUNT(order_id) >10
ORDER BY NumberOfOrders DESC


